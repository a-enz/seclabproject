-----------------------------------------------
Needed Functionality
-----------------------------------------------
+ verify user/password
+ verify certificate? for login
+ fetch user data from DB
+ push changes to DB
+ generate key pairs and corresponding certificate
+ revoke certificate and fetch revocation list
+ fetch CA state
+ ssh and ftps connections for administration


-----------------------------------------------
BACKEND
-----------------------------------------------
## Technology ##
+ Openssl (see Chapter 7 of the Book) -> already installed on OS
± Django REST Framework -> djangorestframework python 3 package
+ MySQL -> msqlclient python 3 package


-----------------------------------------------
REST API
-----------------------------------------------
## Possible Technologies ##
+ Django (Python)
+ Flask (Python)
+ Spark (Java)
+ Spring (Java)
+ Rails (Ruby)

## Calls ##

- - - CA - - -
- issue_certificate -> to create a key-pair and corresponding certificate for a user and return both in pkcs#12 format-> POST /certificates/new/:<userId> args {"password":"<somePassword>"} returns {“privateKey”:”<PKCS#12key>”, “certificate”:”<PKCS#12Bytes>”}

- revoke_certificate -> to revoke one/all certificates of a user and return a new revocation list-> DELETE /certificates/:<userId>/one args{“serialNumber”:”<nr>”}
revocation list-> DELETE /certificates/:<userId>/all
both returns {“certificateRevocationList”:””}

- get_number_issued -> ca admin only -> to retrieve the number of issued certificates -> GET /ca/issued returns {“issued”:<number>}

- get_number_revoked -> ca admin only -> to retrieve the number of revoked certificates -> GET /ca/revoked returns {“revoked”:<number>}

- get_serial_number -> ca admin only -> to retrieve the current serial number -> GET /ca/serial_number returns {“serialNumber”:<number>}


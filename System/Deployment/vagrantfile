# TODO: harden base box
# TODO: clone only from master branch

# Global variables:
$dmz_network = "imovies_dmz"
$internal_network = "imovies_internal"

Vagrant.configure("2") do |config|

  # TODO: print some more useful infos
  config.vm.provision "shell", inline: "echo Hello Hacker!"

  config.vm.provision "shell", path: "basic_provisioning.sh"

  # Forward ssh-agent to host machines, this way there is no need to
  # import private keys in an unsafe way
  config.ssh.forward_agent = true

  # config.ssh.keys_only = false: Only use vagrant-provided SSH private keys 
  # (do not use any keys stored in ssh-agent). The default value is true.


    config.vm.define "firewall" do |firewall|
      firewall.vm.box = "centos/7"
      
      firewall.vm.provision "shell", path: "firewall_provisioning.sh"
      firewall.vm.provision "shell", path: "sparse_clone.sh", args: ["System/Firewall"]

      # interface to internal company network
      firewall.vm.network "private_network", ip: "192.168.50.29",
      virtualbox__intnet: "#$internal_network"
      # interface to web server (DMZ)
      firewall.vm.network "private_network", ip: "192.168.51.15",
      virtualbox__intnet: "#$dmz_network"
      
    end



    config.vm.define "web_server" do |web_server|
      web_server.vm.box = "centos/7"
      
      web_server.vm.provision "shell", path: "web_server_provisioning.sh"
      web_server.vm.provision "shell", path: "sparse_clone.sh", args: ["System/Web Server"]

      web_server.vm.network "private_network", ip: "192.168.51.14",
      virtualbox__intnet: "#$dmz_network"
    end


    config.vm.define "core_ca" do |core_ca|
      core_ca.vm.box = "centos/7"
      
      core_ca.vm.provision "shell", path: "core_ca_provisioning.sh"
      core_ca.vm.provision "shell", path: "sparse_clone.sh", args: ["System/Core CA"]

      core_ca.vm.network "private_network", ip: "192.168.50.31",
      virtualbox__intnet: "#$internal_network"
    end

    config.vm.define "backup" do |backup|
      backup.vm.box = "centos/7"
      backup.vm.provision "shell", path: "backup_provisioning.sh"
      backup.vm.provision "shell", path: "sparse_clone.sh", args: ["Backup"]

      backup.vm.network "private_network", ip: "192.168.50.32",
      virtualbox__intnet: "#$internal_network"
    end
=begin
    # Use ubuntu prepared desktop box for the moment
    config.vm.define "client" do |client|
      client.vm.box = "box-cutter/ubuntu1404-desktop"

      client.vm.provider "virtualbox" do |vb|
        vb.gui = true
      end
    end
=end
end
